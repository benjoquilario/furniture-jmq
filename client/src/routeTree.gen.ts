/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeImport } from './routes/home'
import { Route as DashboardProductsImport } from './routes/dashboard/products'
import { Route as DashboardOverviewImport } from './routes/dashboard/overview'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as DashboardNewProductsImport } from './routes/dashboard/new.products'

// Create/Update Routes

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const DashboardProductsRoute = DashboardProductsImport.update({
  id: '/dashboard/products',
  path: '/dashboard/products',
  getParentRoute: () => rootRoute,
} as any)

const DashboardOverviewRoute = DashboardOverviewImport.update({
  id: '/dashboard/overview',
  path: '/dashboard/overview',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardNewProductsRoute = DashboardNewProductsImport.update({
  id: '/dashboard/new/products',
  path: '/dashboard/new/products',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/overview': {
      id: '/dashboard/overview'
      path: '/dashboard/overview'
      fullPath: '/dashboard/overview'
      preLoaderRoute: typeof DashboardOverviewImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/products': {
      id: '/dashboard/products'
      path: '/dashboard/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof DashboardProductsImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/new/products': {
      id: '/dashboard/new/products'
      path: '/dashboard/new/products'
      fullPath: '/dashboard/new/products'
      preLoaderRoute: typeof DashboardNewProductsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/home': typeof HomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/dashboard/new/products': typeof DashboardNewProductsRoute
}

export interface FileRoutesByTo {
  '/home': typeof HomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/dashboard/new/products': typeof DashboardNewProductsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/home': typeof HomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/overview': typeof DashboardOverviewRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/dashboard/new/products': typeof DashboardNewProductsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/home'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/overview'
    | '/dashboard/products'
    | '/dashboard/new/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/home'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/overview'
    | '/dashboard/products'
    | '/dashboard/new/products'
  id:
    | '__root__'
    | '/home'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/overview'
    | '/dashboard/products'
    | '/dashboard/new/products'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  HomeRoute: typeof HomeRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  DashboardOverviewRoute: typeof DashboardOverviewRoute
  DashboardProductsRoute: typeof DashboardProductsRoute
  DashboardNewProductsRoute: typeof DashboardNewProductsRoute
}

const rootRouteChildren: RootRouteChildren = {
  HomeRoute: HomeRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  DashboardOverviewRoute: DashboardOverviewRoute,
  DashboardProductsRoute: DashboardProductsRoute,
  DashboardNewProductsRoute: DashboardNewProductsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/home",
        "/auth/login",
        "/auth/register",
        "/dashboard/overview",
        "/dashboard/products",
        "/dashboard/new/products"
      ]
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/dashboard/overview": {
      "filePath": "dashboard/overview.tsx"
    },
    "/dashboard/products": {
      "filePath": "dashboard/products.tsx"
    },
    "/dashboard/new/products": {
      "filePath": "dashboard/new.products.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
